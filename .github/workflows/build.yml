name: Build und Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  validate:
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Node.js Setup
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Check package-lock.json sync
        id: check-lock
        run: |
          if [[ -f "package-lock.json" ]]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Install Dependencies & Update Lock
        if: steps.check-lock.outputs.exists == 'false' || github.event_name == 'workflow_dispatch'
        run: |
          rm -f package-lock.json
          npm install --package-lock-only
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          
          if [[ -n $(git status --porcelain) ]]; then
            git add package-lock.json
            git commit -m "chore: Update package-lock.json"
            git push
          fi

  build:
    needs: validate
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Node.js Setup
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install Dependencies
        run: npm ci
        
      - name: Run ESLint
        run: npm run lint
        continue-on-error: true
        
      - name: Build
        run: npm run build
        
      - name: Cache Build Output
        uses: actions/cache@v3
        with:
          path: dist
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

  test:
    needs: build
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Node.js Setup
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install Dependencies
        run: npm ci
      
      - name: Restore Build Cache
        uses: actions/cache@v3
        with:
          path: dist
          key: ${{ runner.os }}-build-${{ github.sha }}
      
      - name: Run Tests
        run: npm test
      
      - name: Upload Coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7